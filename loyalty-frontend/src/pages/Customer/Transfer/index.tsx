// File: src/pages/Customer/Transfer/index.tsx

import React, { useState } from 'react';
import { Card, Form, Input, Button, Typography, Modal, message, InputNumber, Space, Divider, Row, Col } from 'antd';
import { SwapOutlined, UserOutlined, ExclamationCircleOutlined, WalletOutlined, SendOutlined } from '@ant-design/icons';

interface TransferFormData {
    targetCustomerId: string;
    amount: number;
    description: string;
}

const TransferPage: React.FC = () => {
    const [form] = Form.useForm();
    const [isModalVisible, setIsModalVisible] = useState(false);
    const [transferData, setTransferData] = useState<TransferFormData | null>(null);
    
    // S·ªë d∆∞ ƒëi·ªÉm hi·ªán t·∫°i c·ªßa ng∆∞·ªùi d√πng (gi·∫£ l·∫≠p)
    const currentBalance = 1500;
    const currentUserId = "CUST001"; // ID ng∆∞·ªùi g·ª≠i (gi·∫£ l·∫≠p)

    // 4. X·ª≠ l√Ω khi submit form
    const onFinish = (values: TransferFormData) => {
        console.log('Transfer form data:', values);
        
        // Ki·ªÉm tra kh√¥ng th·ªÉ chuy·ªÉn cho ch√≠nh m√¨nh
        if (values.targetCustomerId === currentUserId) {
            message.error('Kh√¥ng th·ªÉ chuy·ªÉn ƒëi·ªÉm cho ch√≠nh m√¨nh!');
            return;
        }

        // Ki·ªÉm tra s·ªë d∆∞ ƒë·ªß kh√¥ng
        if (values.amount > currentBalance) {
            message.error('S·ªë d∆∞ ƒëi·ªÉm kh√¥ng ƒë·ªß ƒë·ªÉ th·ª±c hi·ªán giao d·ªãch!');
            return;
        }

        // L∆∞u d·ªØ li·ªáu v√† hi·ªÉn th·ªã Modal x√°c nh·∫≠n
        setTransferData(values);
        setIsModalVisible(true);
    };

    const onFinishFailed = (errorInfo: any) => {
        console.log('Form validation failed:', errorInfo);
        message.error('Vui l√≤ng ki·ªÉm tra l·∫°i th√¥ng tin ƒë√£ nh·∫≠p!');
    };

    // 5. X·ª≠ l√Ω x√°c nh·∫≠n chuy·ªÉn ƒëi·ªÉm
    const handleConfirmTransfer = () => {
        if (transferData) {
            // ƒê√≥ng Modal v√† hi·ªÉn th·ªã th√¥ng b√°o th√†nh c√¥ng
            setIsModalVisible(false);
            message.success(
                `Chuy·ªÉn ${transferData.amount.toLocaleString()} ƒëi·ªÉm ƒë·∫øn ${transferData.targetCustomerId} th√†nh c√¥ng!`
            );
            
            // Reset form sau khi chuy·ªÉn th√†nh c√¥ng
            form.resetFields();
            setTransferData(null);
            
            // TODO: T√≠ch h·ª£p API th·∫≠t ·ªü c√°c b∆∞·ªõc sau
            console.log('Transfer completed:', transferData);
        }
    };

    // X·ª≠ l√Ω h·ªßy Modal
    const handleCancel = () => {
        setIsModalVisible(false);
        setTransferData(null);
    };

    return (
        <div style={{ padding: '0' }}>
            {/* 1. Ti√™u ƒë·ªÅ ch√≠nh cho trang */}
            <div style={{ marginBottom: '24px' }}>
                <Typography.Title level={2} style={{ margin: 0, color: '#1890ff' }}>
                    <SwapOutlined style={{ marginRight: '12px' }} />
                    Chuy·ªÉn ƒëi·ªÉm Loyalty
                </Typography.Title>
                <Typography.Text type="secondary" style={{ fontSize: '16px' }}>
                    Chuy·ªÉn ƒëi·ªÉm loyalty cho b·∫°n b√® v√† ng∆∞·ªùi th√¢n m·ªôt c√°ch d·ªÖ d√†ng
                </Typography.Text>
            </div>

            <Row gutter={[24, 24]}>
                {/* Hi·ªÉn th·ªã s·ªë d∆∞ hi·ªán t·∫°i */}
                <Col xs={24} lg={8}>
                    <Card 
                        style={{ 
                            borderRadius: '12px',
                            background: 'linear-gradient(135deg, #e8f4ff 0%, #ffffff 100%)',
                            border: '1px solid #d6e4ff',
                            height: 'fit-content'
                        }}
                    >
                        <div style={{ textAlign: 'center', padding: '16px 0' }}>
                            <WalletOutlined style={{ fontSize: '32px', color: '#1890ff', marginBottom: '16px' }} />
                            <Typography.Title level={3} style={{ margin: '0 0 8px 0', color: '#1890ff' }}>
                                {currentBalance.toLocaleString()} ƒëi·ªÉm
                            </Typography.Title>
                            <Typography.Text type="secondary">S·ªë d∆∞ hi·ªán t·∫°i</Typography.Text>
                            <Divider style={{ margin: '16px 0' }} />
                            <Typography.Text type="secondary" style={{ fontSize: '12px' }}>
                                ID c·ªßa b·∫°n: <strong>{currentUserId}</strong>
                            </Typography.Text>
                        </div>
                    </Card>

                    {/* Th√¥ng tin h∆∞·ªõng d·∫´n */}
                    <Card 
                        title="üìã H∆∞·ªõng d·∫´n chuy·ªÉn ƒëi·ªÉm"
                        style={{ 
                            marginTop: '16px',
                            borderRadius: '12px'
                        }}
                        size="small"
                    >
                        <ul style={{ paddingLeft: '16px', margin: 0 }}>
                            <li style={{ marginBottom: '8px' }}>
                                <Typography.Text type="secondary" style={{ fontSize: '13px' }}>
                                    Nh·∫≠p ch√≠nh x√°c ID ng∆∞·ªùi nh·∫≠n
                                </Typography.Text>
                            </li>
                            <li style={{ marginBottom: '8px' }}>
                                <Typography.Text type="secondary" style={{ fontSize: '13px' }}>
                                    S·ªë ƒëi·ªÉm chuy·ªÉn t·ªëi thi·ªÉu: 1 ƒëi·ªÉm
                                </Typography.Text>
                            </li>
                            <li style={{ marginBottom: '8px' }}>
                                <Typography.Text type="secondary" style={{ fontSize: '13px' }}>
                                    Kh√¥ng th·ªÉ chuy·ªÉn cho ch√≠nh m√¨nh
                                </Typography.Text>
                            </li>
                            <li>
                                <Typography.Text type="secondary" style={{ fontSize: '13px' }}>
                                    Giao d·ªãch kh√¥ng th·ªÉ ho√†n t√°c
                                </Typography.Text>
                            </li>
                        </ul>
                    </Card>
                </Col>

                {/* 2. Form chuy·ªÉn ƒëi·ªÉm */}
                <Col xs={24} lg={16}>
                    <Card 
                        title={
                            <Space>
                                <SendOutlined />
                                <span>Th√¥ng tin chuy·ªÉn ƒëi·ªÉm</span>
                            </Space>
                        }
                        style={{ 
                            borderRadius: '12px',
                            boxShadow: '0 2px 8px rgba(0,0,0,0.1)'
                        }}
                    >
                        <Form
                            form={form}
                            name="transferForm"
                            layout="vertical"
                            onFinish={onFinish}
                            onFinishFailed={onFinishFailed}
                            autoComplete="off"
                            size="large"
                        >
                            {/* 3. ID ng∆∞·ªùi nh·∫≠n */}
                            <Form.Item
                                label="ID ng∆∞·ªùi nh·∫≠n"
                                name="targetCustomerId"
                                rules={[
                                    {
                                        required: true,
                                        message: 'Vui l√≤ng nh·∫≠p ID ng∆∞·ªùi nh·∫≠n!'
                                    },
                                    {
                                        min: 3,
                                        message: 'ID ng∆∞·ªùi nh·∫≠n ph·∫£i c√≥ √≠t nh·∫•t 3 k√Ω t·ª±!'
                                    },
                                    {
                                        validator: (_, value) => {
                                            if (value && value === currentUserId) {
                                                return Promise.reject(new Error('Kh√¥ng th·ªÉ chuy·ªÉn ƒëi·ªÉm cho ch√≠nh m√¨nh!'));
                                            }
                                            return Promise.resolve();
                                        }
                                    }
                                ]}
                            >
                                <Input 
                                    prefix={<UserOutlined />}
                                    placeholder="Nh·∫≠p ID ng∆∞·ªùi nh·∫≠n (VD: CUST002)"
                                    style={{ borderRadius: '6px' }}
                                />
                            </Form.Item>

                            {/* 3. S·ªë ƒëi·ªÉm c·∫ßn chuy·ªÉn */}
                            <Form.Item
                                label="S·ªë ƒëi·ªÉm c·∫ßn chuy·ªÉn"
                                name="amount"
                                rules={[
                                    {
                                        required: true,
                                        message: 'Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªÉm c·∫ßn chuy·ªÉn!'
                                    },
                                    {
                                        type: 'number',
                                        min: 1,
                                        message: 'S·ªë ƒëi·ªÉm ph·∫£i l·ªõn h∆°n 0!'
                                    },
                                    {
                                        type: 'number',
                                        max: currentBalance,
                                        message: `S·ªë ƒëi·ªÉm kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° ${currentBalance.toLocaleString()}!`
                                    }
                                ]}
                            >
                                <InputNumber
                                    style={{ width: '100%', borderRadius: '6px' }}
                                    placeholder="Nh·∫≠p s·ªë ƒëi·ªÉm c·∫ßn chuy·ªÉn"
                                    formatter={value => `${value}`.replace(/\B(?=(\d{3})+(?!\d))/g, ',')}
                                    parser={value => value!.replace(/\$\s?|(,*)/g, '')}
                                    addonAfter="ƒëi·ªÉm"
                                />
                            </Form.Item>

                            {/* 3. L·ªùi nh·∫Øn */}
                            <Form.Item
                                label="L·ªùi nh·∫Øn"
                                name="description"
                                rules={[
                                    {
                                        required: true,
                                        message: 'Vui l√≤ng nh·∫≠p l·ªùi nh·∫Øn!'
                                    },
                                    {
                                        min: 5,
                                        message: 'L·ªùi nh·∫Øn ph·∫£i c√≥ √≠t nh·∫•t 5 k√Ω t·ª±!'
                                    },
                                    {
                                        max: 200,
                                        message: 'L·ªùi nh·∫Øn kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 200 k√Ω t·ª±!'
                                    }
                                ]}
                            >
                                <Input.TextArea
                                    rows={4}
                                    placeholder="Nh·∫≠p l·ªùi nh·∫Øn k√®m theo (VD: Ch√∫c m·ª´ng sinh nh·∫≠t!)"
                                    style={{ borderRadius: '6px' }}
                                    showCount
                                    maxLength={200}
                                />
                            </Form.Item>

                            {/* Submit button */}
                            <Form.Item style={{ marginBottom: 0, marginTop: '32px' }}>
                                <Button
                                    type="primary"
                                    htmlType="submit"
                                    block
                                    size="large"
                                    style={{
                                        height: '48px',
                                        borderRadius: '6px',
                                        fontSize: '16px',
                                        fontWeight: '500'
                                    }}
                                    icon={<SwapOutlined />}
                                >
                                    Chuy·ªÉn ƒëi·ªÉm ngay
                                </Button>
                            </Form.Item>
                        </Form>
                    </Card>
                </Col>
            </Row>

            {/* 4. Modal x√°c nh·∫≠n chuy·ªÉn ƒëi·ªÉm */}
            <Modal
                title={
                    <Space>
                        <ExclamationCircleOutlined style={{ color: '#faad14' }} />
                        <span>X√°c nh·∫≠n chuy·ªÉn ƒëi·ªÉm</span>
                    </Space>
                }
                open={isModalVisible}
                onOk={handleConfirmTransfer}
                onCancel={handleCancel}
                okText="X√°c nh·∫≠n chuy·ªÉn"
                cancelText="H·ªßy"
                okType="primary"
                centered
                width={550}
            >
                {transferData && (
                    <div style={{ padding: '16px 0' }}>
                        <Typography.Text style={{ fontSize: '16px', marginBottom: '16px', display: 'block' }}>
                            B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën th·ª±c hi·ªán giao d·ªãch chuy·ªÉn ƒëi·ªÉm n√†y kh√¥ng?
                        </Typography.Text>
                        
                        <div style={{ 
                            background: '#f8f9fa', 
                            padding: '20px', 
                            borderRadius: '8px', 
                            margin: '16px 0',
                            border: '1px solid #e9ecef'
                        }}>
                            <Row gutter={[16, 12]}>
                                <Col span={8}>
                                    <Typography.Text strong>T·ª´:</Typography.Text>
                                </Col>
                                <Col span={16}>
                                    <Typography.Text>{currentUserId}</Typography.Text>
                                </Col>
                                
                                <Col span={8}>
                                    <Typography.Text strong>ƒê·∫øn:</Typography.Text>
                                </Col>
                                <Col span={16}>
                                    <Typography.Text style={{ color: '#1890ff' }}>
                                        {transferData.targetCustomerId}
                                    </Typography.Text>
                                </Col>
                                
                                <Col span={8}>
                                    <Typography.Text strong>S·ªë ƒëi·ªÉm:</Typography.Text>
                                </Col>
                                <Col span={16}>
                                    <Typography.Text style={{ color: '#fa8c16', fontSize: '16px', fontWeight: 'bold' }}>
                                        {transferData.amount.toLocaleString()} ƒëi·ªÉm
                                    </Typography.Text>
                                </Col>
                                
                                <Col span={8}>
                                    <Typography.Text strong>L·ªùi nh·∫Øn:</Typography.Text>
                                </Col>
                                <Col span={16}>
                                    <Typography.Text italic>"{transferData.description}"</Typography.Text>
                                </Col>
                            </Row>
                            
                            <Divider style={{ margin: '16px 0' }} />
                            
                            <Row gutter={[16, 8]}>
                                <Col span={12}>
                                    <Typography.Text type="secondary">
                                        S·ªë d∆∞ hi·ªán t·∫°i: {currentBalance.toLocaleString()} ƒëi·ªÉm
                                    </Typography.Text>
                                </Col>
                                <Col span={12}>
                                    <Typography.Text type="secondary">
                                        S·ªë d∆∞ sau giao d·ªãch: {(currentBalance - transferData.amount).toLocaleString()} ƒëi·ªÉm
                                    </Typography.Text>
                                </Col>
                            </Row>
                        </div>
                        
                        <Typography.Text type="warning" style={{ fontSize: '13px' }}>
                            ‚ö†Ô∏è L∆∞u √Ω: Giao d·ªãch chuy·ªÉn ƒëi·ªÉm kh√¥ng th·ªÉ ho√†n t√°c sau khi x√°c nh·∫≠n.
                        </Typography.Text>
                    </div>
                )}
            </Modal>
        </div>
    );
};

export default TransferPage;